package multithread.chapter3.demo31InheritableThreadLocal1;

/**
 * P197
 * InheritableThreadLocal子线程继承父线程的值
 * 本例中A线程继承了父线程main的InheritableThreadLocal变量
 *
 * Result:
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在Main线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 * 在A线程中取值=1553571074879
 *
 * 同时可以重写InheritableThreadLocal的childValue方法更改子线程继承的InheritableThreadLocal值
 *
 * Result:
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在Main线程中取值=1553571400327
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 * 在A线程中取值=1553571400327 这是子线程继承的值！
 *
 */
public class Run {
    public static void main(String[] args) {
        try {
            for (int i=0; i<10; i++)    {
                System.out.println("在Main线程中取值=" + Tools.t1.get());
                Thread.sleep(100);
            }
            Thread.sleep(5000);
            ThreadA a = new ThreadA();
            a.start();
        } catch (InterruptedException e)    {
            e.printStackTrace();
        }
    }
}
